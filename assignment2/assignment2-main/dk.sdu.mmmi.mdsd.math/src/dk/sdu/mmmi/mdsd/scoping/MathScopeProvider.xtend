/*
 * generated by Xtext 2.25.0
 */
package dk.sdu.mmmi.mdsd.scoping

import org.eclipse.emf.ecore.EObject
import dk.sdu.mmmi.mdsd.math.MathPackage
import dk.sdu.mmmi.mdsd.math.Let
import dk.sdu.mmmi.mdsd.math.Origen
import org.eclipse.xtext.scoping.Scopes
import org.eclipse.xtext.scoping.IScope
import org.eclipse.emf.ecore.EReference

/**
 * This class contains custom scoping description.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#scoping
 * on how and when to use it.
 */
class MathScopeProvider extends AbstractMathScopeProvider {
	
	override getScope(EObject context, EReference reference){
		if(reference == MathPackage.Literals.VARIABLE_USE__REF){
			return getherVariables(context)
		}
		return super.getScope(context, reference)
 		
 		
	}
 		
	def protected IScope getherVariables(EObject context){
		return switch (context.eContainer){
			Let: Scopes.scopeFor(newArrayList(context.eContainer), getherVariables(context.eContainer))
			Origen: Scopes.scopeFor((context.eContainer as Origen).x.filter([it != context]))
			default: getherVariables(context.eContainer)
			
		}
	}
	
}

